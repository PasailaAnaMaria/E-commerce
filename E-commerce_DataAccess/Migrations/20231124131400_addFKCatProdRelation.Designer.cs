// <auto-generated />
using E_commerce_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_commerce_DataAccess.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20231124131400_addFKCatProdRelation")]
    partial class addFKCatProdRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_commerce_Models.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("E_commerce_Models.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Tom Cruis",
                            CategoryId = 1,
                            Description = "Army pilots",
                            ISBN = "F5435354bjh",
                            ListPrice = 25.0,
                            Price = 25.0,
                            Price100 = 30.0,
                            Price50 = 26.0,
                            Title = "Top Gun"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Leonardo D",
                            CategoryId = 2,
                            Description = " The most bigger movie of all time",
                            ISBN = "F5498754NN",
                            ListPrice = 35.0,
                            Price = 75.0,
                            Price100 = 50.0,
                            Price50 = 66.0,
                            Title = "Titanic"
                        },
                        new
                        {
                            Id = 3,
                            Author = "D.B.",
                            CategoryId = 3,
                            Description = "Disney",
                            ISBN = "F5435354AAA",
                            ListPrice = 29.0,
                            Price = 28.0,
                            Price100 = 31.0,
                            Price50 = 26.0,
                            Title = "Marvel"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Chris T",
                            CategoryId = 1,
                            Description = "Disney",
                            ISBN = "F54353VYGJH",
                            ListPrice = 15.0,
                            Price = 65.0,
                            Price100 = 36.0,
                            Price50 = 36.0,
                            Title = "Thor"
                        },
                        new
                        {
                            Id = 5,
                            Author = "T.Cris",
                            CategoryId = 2,
                            Description = "Love Santa",
                            ISBN = "F543532528A",
                            ListPrice = 15.0,
                            Price = 15.0,
                            Price100 = 20.0,
                            Price50 = 16.0,
                            Title = "Last Christmas"
                        },
                        new
                        {
                            Id = 6,
                            Author = "L.Deep",
                            CategoryId = 3,
                            Description = "Dancer ,love, discovery",
                            ISBN = "F543535MM55",
                            ListPrice = 25.0,
                            Price = 25.0,
                            Price100 = 30.0,
                            Price50 = 26.0,
                            Title = "The Idol"
                        });
                });

            modelBuilder.Entity("E_commerce_Models.Models.Product", b =>
                {
                    b.HasOne("E_commerce_Models.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
